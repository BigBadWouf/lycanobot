--- Net/IRC/Connection.pm	2008-07-21 14:48:09.000000000 +0200
+++ Net/IRC/Connection.pm	2008-12-23 02:41:48.000000000 +0100
@@ -50,6 +50,8 @@
                    'hostname' => undef,
 		   'pacing'   => undef,
                    'ssl'      => undef,
+		   'max_send' => undef,
+		   'max_time' => undef
 		 );
 
 # This hash will contain any global default handlers that the user specifies.
@@ -74,8 +76,11 @@
     _frag       =>  '',
     _connected  =>  0,
     _maxlinelen =>  510,     # The RFC says we shouldn't exceed this.
-    _lastsl     =>  0,
     _pacing     =>  0,       # no pacing by default
+    _max_send   =>  512,     # If pacing, max bytes to be sent
+    _max_time   =>  1,       # If pacing, max time within _max_send is sent
+    _can_send   =>  512,     # If pacing, bytes currently allowed to be sent
+    _last_send  =>  0,       # If pacing, last message send date from time()
     _ssl	=>  0,       # no ssl by default
     _format     => { 'default' => "[%f:%t]  %m  <%d>", },
   };
@@ -227,6 +232,11 @@
     $self->ircname($arg{'Ircname'}) if exists $arg{'Ircname'};
     $self->username($arg{'Username'}) if exists $arg{'Username'};
     $self->pacing($arg{'Pacing'}) if exists $arg{'Pacing'};
+    if (exists $arg{'MaxSend'}) {
+      $self->max_send($arg{'MaxSend'});
+      $self->{_can_send} = $self->max_send; # Fill our bucket
+    }
+    $self->max_time($arg{'MaxTime'}) if exists $arg{'MaxTime'};
     $self->ssl($arg{'SSL'}) if exists $arg{'SSL'};
   }
   
@@ -1344,13 +1354,32 @@
   }
   
   # calculate how long to wait before sending this line
+  # We use bytes::length because CORE::length is for (multi-bytes) chars.
   my $time = time;
-  if ($time - $self->{_lastsl} > $self->pacing) {
-    $self->{_lastsl} = $time;
+  my $rate = $self->{_max_send} / ($self->{_max_time} || 1);
+  use bytes;
+  my $cost = bytes::length($line);
+
+  # Add to the bucket how much did we wait
+  if ($time > $self->{_last_send}) { # Is _last_send in the past ?
+    $self->{_can_send} += ($time - $self->{_last_send}) * $rate;
+  }
+  # Do not make our bucket overflow
+  if ($self->{_can_send} > $self->{_max_send}) {
+    $self->{_can_send} = $self->{_max_send};
+  }
+
+  if ($self->{_can_send} - $cost > 0) {
+    # We can send it right now
+    $self->{_can_send} -= $cost;
+    $self->{_last_send} = $time;
   } else {
-    $self->{_lastsl} += $self->pacing;
+    # Have to wait... calculate how long
+    $self->{_last_send} += (($cost - $self->{_can_send}) / $rate);
+    $self->{_can_send} = 0;
   }
-  my $seconds = $self->{_lastsl} - $time;
+  my $seconds = $self->{_last_send} - $time;
+  $seconds = 0 if ($seconds < 0);
   
   ### DEBUG DEBUG DEBUG
   if ($self->{_debug}) {
